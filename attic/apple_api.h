/* This file was automatically generated with apple_api_generator.tcl. */

/*
 Copyright (c) 2008 Apple Inc.
 
 Permission is hereby granted, free of charge, to any person
 obtaining a copy of this software and associated documentation files
 (the "Software"), to deal in the Software without restriction,
 including without limitation the rights to use, copy, modify, merge,
 publish, distribute, sublicense, and/or sell copies of the Software,
 and to permit persons to whom the Software is furnished to do so,
 subject to the following conditions:
 
 The above copyright notice and this permission notice shall be
 included in all copies or substantial portions of the Software.
 
 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 NONINFRINGEMENT.  IN NO EVENT SHALL THE ABOVE LISTED COPYRIGHT
 HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 DEALINGS IN THE SOFTWARE.
 
 Except as contained in this notice, the name(s) of the above
 copyright holders shall not be used in advertising or otherwise to
 promote the sale, use or other dealings in this Software without
 prior written authorization.
*/

#ifndef APPLE_API_H
#define APPLE_API_H
#ifdef __cplusplus
extern "C" {
#endif
struct apple_api {
	void (*Accum)(GLenum a, GLfloat b);
	void (*AlphaFunc)(GLenum a, GLclampf b);
	GLboolean (*AreTexturesResident)(GLsizei a, const GLuint * b, GLboolean * c);
	void (*ArrayElement)(GLint a);
	void (*Begin)(GLenum a);
	void (*BindTexture)(GLenum a, GLuint b);
	void (*Bitmap)(GLsizei a, GLsizei b, GLfloat c, GLfloat d, GLfloat e, GLfloat f, const GLubyte * g);
	void (*BlendColor)(GLclampf a, GLclampf b, GLclampf c, GLclampf d);
	void (*BlendEquation)(GLenum a);
	void (*BlendEquationSeparate)(GLenum a, GLenum b);
	void (*BlendFunc)(GLenum a, GLenum b);
	void (*CallList)(GLuint a);
	void (*CallLists)(GLsizei a, GLenum b, const GLvoid * c);
	void (*Clear)(GLbitfield a);
	void (*ClearAccum)(GLfloat a, GLfloat b, GLfloat c, GLfloat d);
	void (*ClearColor)(GLclampf a, GLclampf b, GLclampf c, GLclampf d);
	void (*ClearDepth)(GLclampd a);
	void (*ClearIndex)(GLfloat a);
	void (*ClearStencil)(GLint a);
	void (*ClipPlane)(GLenum a, const GLdouble * b);
	void (*Color3b)(GLbyte a, GLbyte b, GLbyte c);
	void (*Color3bv)(const GLbyte * a);
	void (*Color3d)(GLdouble a, GLdouble b, GLdouble c);
	void (*Color3dv)(const GLdouble * a);
	void (*Color3f)(GLfloat a, GLfloat b, GLfloat c);
	void (*Color3fv)(const GLfloat * a);
	void (*Color3i)(GLint a, GLint b, GLint c);
	void (*Color3iv)(const GLint * a);
	void (*Color3s)(GLshort a, GLshort b, GLshort c);
	void (*Color3sv)(const GLshort * a);
	void (*Color3ub)(GLubyte a, GLubyte b, GLubyte c);
	void (*Color3ubv)(const GLubyte * a);
	void (*Color3ui)(GLuint a, GLuint b, GLuint c);
	void (*Color3uiv)(const GLuint * a);
	void (*Color3us)(GLushort a, GLushort b, GLushort c);
	void (*Color3usv)(const GLushort * a);
	void (*Color4b)(GLbyte a, GLbyte b, GLbyte c, GLbyte d);
	void (*Color4bv)(const GLbyte * a);
	void (*Color4d)(GLdouble a, GLdouble b, GLdouble c, GLdouble d);
	void (*Color4dv)(const GLdouble * a);
	void (*Color4f)(GLfloat a, GLfloat b, GLfloat c, GLfloat d);
	void (*Color4fv)(const GLfloat * a);
	void (*Color4i)(GLint a, GLint b, GLint c, GLint d);
	void (*Color4iv)(const GLint * a);
	void (*Color4s)(GLshort a, GLshort b, GLshort c, GLshort d);
	void (*Color4sv)(const GLshort * a);
	void (*Color4ub)(GLubyte a, GLubyte b, GLubyte c, GLubyte d);
	void (*Color4ubv)(const GLubyte * a);
	void (*Color4ui)(GLuint a, GLuint b, GLuint c, GLuint d);
	void (*Color4uiv)(const GLuint * a);
	void (*Color4us)(GLushort a, GLushort b, GLushort c, GLushort d);
	void (*Color4usv)(const GLushort * a);
	void (*ColorMask)(GLboolean a, GLboolean b, GLboolean c, GLboolean d);
	void (*ColorMaterial)(GLenum a, GLenum b);
	void (*ColorPointer)(GLint a, GLenum b, GLsizei c, const GLvoid * d);
	void (*ColorSubTable)(GLenum a, GLsizei b, GLsizei c, GLenum d, GLenum e, const GLvoid * f);
	void (*ColorTable)(GLenum a, GLenum b, GLsizei c, GLenum d, GLenum e, const GLvoid * f);
	void (*ColorTableParameterfv)(GLenum a, GLenum b, const GLfloat * c);
	void (*ColorTableParameteriv)(GLenum a, GLenum b, const GLint * c);
	void (*ConvolutionFilter1D)(GLenum a, GLenum b, GLsizei c, GLenum d, GLenum e, const GLvoid * f);
	void (*ConvolutionFilter2D)(GLenum a, GLenum b, GLsizei c, GLsizei d, GLenum e, GLenum f, const GLvoid * g);
	void (*ConvolutionParameterf)(GLenum a, GLenum b, GLfloat c);
	void (*ConvolutionParameterfv)(GLenum a, GLenum b, const GLfloat * c);
	void (*ConvolutionParameteri)(GLenum a, GLenum b, GLint c);
	void (*ConvolutionParameteriv)(GLenum a, GLenum b, const GLint * c);
	void (*CopyColorSubTable)(GLenum a, GLsizei b, GLint c, GLint d, GLsizei e);
	void (*CopyColorTable)(GLenum a, GLenum b, GLint c, GLint d, GLsizei e);
	void (*CopyConvolutionFilter1D)(GLenum a, GLenum b, GLint c, GLint d, GLsizei e);
	void (*CopyConvolutionFilter2D)(GLenum a, GLenum b, GLint c, GLint d, GLsizei e, GLsizei f);
	void (*CopyPixels)(GLint a, GLint b, GLsizei c, GLsizei d, GLenum e);
	void (*CopyTexImage1D)(GLenum a, GLint b, GLenum c, GLint d, GLint e, GLsizei f, GLint g);
	void (*CopyTexImage2D)(GLenum a, GLint b, GLenum c, GLint d, GLint e, GLsizei f, GLsizei g, GLint h);
	void (*CopyTexSubImage1D)(GLenum a, GLint b, GLint c, GLint d, GLint e, GLsizei f);
	void (*CopyTexSubImage2D)(GLenum a, GLint b, GLint c, GLint d, GLint e, GLint f, GLsizei g, GLsizei h);
	void (*CopyTexSubImage3D)(GLenum a, GLint b, GLint c, GLint d, GLint e, GLint f, GLint g, GLsizei h, GLsizei i);
	void (*CullFace)(GLenum a);
	void (*DeleteLists)(GLuint a, GLsizei b);
	void (*DeleteTextures)(GLsizei a, const GLuint * b);
	void (*DepthFunc)(GLenum a);
	void (*DepthMask)(GLboolean a);
	void (*DepthRange)(GLclampd a, GLclampd b);
	void (*Disable)(GLenum a);
	void (*DisableClientState)(GLenum a);
	void (*DrawArrays)(GLenum a, GLint b, GLsizei c);
	void (*DrawBuffer)(GLenum a);
	void (*DrawElements)(GLenum a, GLsizei b, GLenum c, const GLvoid * d);
	void (*DrawPixels)(GLsizei a, GLsizei b, GLenum c, GLenum d, const GLvoid * e);
	void (*DrawRangeElements)(GLenum a, GLuint b, GLuint c, GLsizei d, GLenum e, const GLvoid * f);
	void (*EdgeFlag)(GLboolean a);
	void (*EdgeFlagPointer)(GLsizei a, const GLvoid * b);
	void (*EdgeFlagv)(const GLboolean * a);
	void (*Enable)(GLenum a);
	void (*EnableClientState)(GLenum a);
	void (*End)();
	void (*EndList)();
	void (*EvalCoord1d)(GLdouble a);
	void (*EvalCoord1dv)(const GLdouble * a);
	void (*EvalCoord1f)(GLfloat a);
	void (*EvalCoord1fv)(const GLfloat * a);
	void (*EvalCoord2d)(GLdouble a, GLdouble b);
	void (*EvalCoord2dv)(const GLdouble * a);
	void (*EvalCoord2f)(GLfloat a, GLfloat b);
	void (*EvalCoord2fv)(const GLfloat * a);
	void (*EvalMesh1)(GLenum a, GLint b, GLint c);
	void (*EvalMesh2)(GLenum a, GLint b, GLint c, GLint d, GLint e);
	void (*EvalPoint1)(GLint a);
	void (*EvalPoint2)(GLint a, GLint b);
	void (*FeedbackBuffer)(GLsizei a, GLenum b, GLfloat * c);
	void (*Finish)();
	void (*Flush)();
	void (*Fogf)(GLenum a, GLfloat b);
	void (*Fogfv)(GLenum a, const GLfloat * b);
	void (*Fogi)(GLenum a, GLint b);
	void (*Fogiv)(GLenum a, const GLint * b);
	void (*FrontFace)(GLenum a);
	void (*Frustum)(GLdouble a, GLdouble b, GLdouble c, GLdouble d, GLdouble e, GLdouble f);
	GLuint (*GenLists)(GLsizei a);
	void (*GenTextures)(GLsizei a, GLuint * b);
	void (*GetBooleanv)(GLenum a, GLboolean * b);
	void (*GetClipPlane)(GLenum a, GLdouble * b);
	void (*GetColorTable)(GLenum a, GLenum b, GLenum c, GLvoid * d);
	void (*GetColorTableParameterfv)(GLenum a, GLenum b, GLfloat * c);
	void (*GetColorTableParameteriv)(GLenum a, GLenum b, GLint * c);
	void (*GetConvolutionFilter)(GLenum a, GLenum b, GLenum c, GLvoid * d);
	void (*GetConvolutionParameterfv)(GLenum a, GLenum b, GLfloat * c);
	void (*GetConvolutionParameteriv)(GLenum a, GLenum b, GLint * c);
	void (*GetDoublev)(GLenum a, GLdouble * b);
	GLenum (*GetError)();
	void (*GetFloatv)(GLenum a, GLfloat * b);
	void (*GetHistogram)(GLenum a, GLboolean b, GLenum c, GLenum d, GLvoid * e);
	void (*GetHistogramParameterfv)(GLenum a, GLenum b, GLfloat * c);
	void (*GetHistogramParameteriv)(GLenum a, GLenum b, GLint * c);
	void (*GetIntegerv)(GLenum a, GLint * b);
	void (*GetLightfv)(GLenum a, GLenum b, GLfloat * c);
	void (*GetLightiv)(GLenum a, GLenum b, GLint * c);
	void (*GetMapdv)(GLenum a, GLenum b, GLdouble * c);
	void (*GetMapfv)(GLenum a, GLenum b, GLfloat * c);
	void (*GetMapiv)(GLenum a, GLenum b, GLint * c);
	void (*GetMaterialfv)(GLenum a, GLenum b, GLfloat * c);
	void (*GetMaterialiv)(GLenum a, GLenum b, GLint * c);
	void (*GetMinmax)(GLenum a, GLboolean b, GLenum c, GLenum d, GLvoid * e);
	void (*GetMinmaxParameterfv)(GLenum a, GLenum b, GLfloat * c);
	void (*GetMinmaxParameteriv)(GLenum a, GLenum b, GLint * c);
	void (*GetPixelMapfv)(GLenum a, GLfloat * b);
	void (*GetPixelMapuiv)(GLenum a, GLuint * b);
	void (*GetPixelMapusv)(GLenum a, GLushort * b);
	void (*GetPointerv)(GLenum a, GLvoid * * b);
	void (*GetPolygonStipple)(GLubyte * a);
	void (*GetSeparableFilter)(GLenum a, GLenum b, GLenum c, GLvoid * d, GLvoid * e, GLvoid * f);
	const GLubyte * (*GetString)(GLenum a);
	void (*GetTexEnvfv)(GLenum a, GLenum b, GLfloat * c);
	void (*GetTexEnviv)(GLenum a, GLenum b, GLint * c);
	void (*GetTexGendv)(GLenum a, GLenum b, GLdouble * c);
	void (*GetTexGenfv)(GLenum a, GLenum b, GLfloat * c);
	void (*GetTexGeniv)(GLenum a, GLenum b, GLint * c);
	void (*GetTexImage)(GLenum a, GLint b, GLenum c, GLenum d, GLvoid * e);
	void (*GetTexLevelParameterfv)(GLenum a, GLint b, GLenum c, GLfloat * d);
	void (*GetTexLevelParameteriv)(GLenum a, GLint b, GLenum c, GLint * d);
	void (*GetTexParameterfv)(GLenum a, GLenum b, GLfloat * c);
	void (*GetTexParameteriv)(GLenum a, GLenum b, GLint * c);
	void (*Hint)(GLenum a, GLenum b);
	void (*Histogram)(GLenum a, GLsizei b, GLenum c, GLboolean d);
	void (*IndexMask)(GLuint a);
	void (*IndexPointer)(GLenum a, GLsizei b, const GLvoid * c);
	void (*Indexd)(GLdouble a);
	void (*Indexdv)(const GLdouble * a);
	void (*Indexf)(GLfloat a);
	void (*Indexfv)(const GLfloat * a);
	void (*Indexi)(GLint a);
	void (*Indexiv)(const GLint * a);
	void (*Indexs)(GLshort a);
	void (*Indexsv)(const GLshort * a);
	void (*Indexub)(GLubyte a);
	void (*Indexubv)(const GLubyte * a);
	void (*InitNames)();
	void (*InterleavedArrays)(GLenum a, GLsizei b, const GLvoid * c);
	GLboolean (*IsEnabled)(GLenum a);
	GLboolean (*IsList)(GLuint a);
	GLboolean (*IsTexture)(GLuint a);
	void (*LightModelf)(GLenum a, GLfloat b);
	void (*LightModelfv)(GLenum a, const GLfloat * b);
	void (*LightModeli)(GLenum a, GLint b);
	void (*LightModeliv)(GLenum a, const GLint * b);
	void (*Lightf)(GLenum a, GLenum b, GLfloat c);
	void (*Lightfv)(GLenum a, GLenum b, const GLfloat * c);
	void (*Lighti)(GLenum a, GLenum b, GLint c);
	void (*Lightiv)(GLenum a, GLenum b, const GLint * c);
	void (*LineStipple)(GLint a, GLushort b);
	void (*LineWidth)(GLfloat a);
	void (*ListBase)(GLuint a);
	void (*LoadIdentity)();
	void (*LoadMatrixd)(const GLdouble * a);
	void (*LoadMatrixf)(const GLfloat * a);
	void (*LoadName)(GLuint a);
	void (*LogicOp)(GLenum a);
	void (*Map1d)(GLenum a, GLdouble b, GLdouble c, GLint d, GLint e, const GLdouble * f);
	void (*Map1f)(GLenum a, GLfloat b, GLfloat c, GLint d, GLint e, const GLfloat * f);
	void (*Map2d)(GLenum a, GLdouble b, GLdouble c, GLint d, GLint e, GLdouble f, GLdouble g, GLint h, GLint i, const GLdouble * j);
	void (*Map2f)(GLenum a, GLfloat b, GLfloat c, GLint d, GLint e, GLfloat f, GLfloat g, GLint h, GLint i, const GLfloat * j);
	void (*MapGrid1d)(GLint a, GLdouble b, GLdouble c);
	void (*MapGrid1f)(GLint a, GLfloat b, GLfloat c);
	void (*MapGrid2d)(GLint a, GLdouble b, GLdouble c, GLint d, GLdouble e, GLdouble f);
	void (*MapGrid2f)(GLint a, GLfloat b, GLfloat c, GLint d, GLfloat e, GLfloat f);
	void (*Materialf)(GLenum a, GLenum b, GLfloat c);
	void (*Materialfv)(GLenum a, GLenum b, const GLfloat * c);
	void (*Materiali)(GLenum a, GLenum b, GLint c);
	void (*Materialiv)(GLenum a, GLenum b, const GLint * c);
	void (*MatrixMode)(GLenum a);
	void (*Minmax)(GLenum a, GLenum b, GLboolean c);
	void (*MultMatrixd)(const GLdouble * a);
	void (*MultMatrixf)(const GLfloat * a);
	void (*NewList)(GLuint a, GLenum b);
	void (*Normal3b)(GLbyte a, GLbyte b, GLbyte c);
	void (*Normal3bv)(const GLbyte * a);
	void (*Normal3d)(GLdouble a, GLdouble b, GLdouble c);
	void (*Normal3dv)(const GLdouble * a);
	void (*Normal3f)(GLfloat a, GLfloat b, GLfloat c);
	void (*Normal3fv)(const GLfloat * a);
	void (*Normal3i)(GLint a, GLint b, GLint c);
	void (*Normal3iv)(const GLint * a);
	void (*Normal3s)(GLshort a, GLshort b, GLshort c);
	void (*Normal3sv)(const GLshort * a);
	void (*NormalPointer)(GLenum a, GLsizei b, const GLvoid * c);
	void (*Ortho)(GLdouble a, GLdouble b, GLdouble c, GLdouble d, GLdouble e, GLdouble f);
	void (*PassThrough)(GLfloat a);
	void (*PixelMapfv)(GLenum a, GLint b, const GLfloat * c);
	void (*PixelMapuiv)(GLenum a, GLint b, const GLuint * c);
	void (*PixelMapusv)(GLenum a, GLint b, const GLushort * c);
	void (*PixelStoref)(GLenum a, GLfloat b);
	void (*PixelStorei)(GLenum a, GLint b);
	void (*PixelTransferf)(GLenum a, GLfloat b);
	void (*PixelTransferi)(GLenum a, GLint b);
	void (*PixelZoom)(GLfloat a, GLfloat b);
	void (*PointSize)(GLfloat a);
	void (*PolygonMode)(GLenum a, GLenum b);
	void (*PolygonOffset)(GLfloat a, GLfloat b);
	void (*PolygonStipple)(const GLubyte * a);
	void (*PopAttrib)();
	void (*PopClientAttrib)();
	void (*PopMatrix)();
	void (*PopName)();
	void (*PrioritizeTextures)(GLsizei a, const GLuint * b, const GLclampf * c);
	void (*PushAttrib)(GLbitfield a);
	void (*PushClientAttrib)(GLbitfield a);
	void (*PushMatrix)();
	void (*PushName)(GLuint a);
	void (*RasterPos2d)(GLdouble a, GLdouble b);
	void (*RasterPos2dv)(const GLdouble * a);
	void (*RasterPos2f)(GLfloat a, GLfloat b);
	void (*RasterPos2fv)(const GLfloat * a);
	void (*RasterPos2i)(GLint a, GLint b);
	void (*RasterPos2iv)(const GLint * a);
	void (*RasterPos2s)(GLshort a, GLshort b);
	void (*RasterPos2sv)(const GLshort * a);
	void (*RasterPos3d)(GLdouble a, GLdouble b, GLdouble c);
	void (*RasterPos3dv)(const GLdouble * a);
	void (*RasterPos3f)(GLfloat a, GLfloat b, GLfloat c);
	void (*RasterPos3fv)(const GLfloat * a);
	void (*RasterPos3i)(GLint a, GLint b, GLint c);
	void (*RasterPos3iv)(const GLint * a);
	void (*RasterPos3s)(GLshort a, GLshort b, GLshort c);
	void (*RasterPos3sv)(const GLshort * a);
	void (*RasterPos4d)(GLdouble a, GLdouble b, GLdouble c, GLdouble d);
	void (*RasterPos4dv)(const GLdouble * a);
	void (*RasterPos4f)(GLfloat a, GLfloat b, GLfloat c, GLfloat d);
	void (*RasterPos4fv)(const GLfloat * a);
	void (*RasterPos4i)(GLint a, GLint b, GLint c, GLint d);
	void (*RasterPos4iv)(const GLint * a);
	void (*RasterPos4s)(GLshort a, GLshort b, GLshort c, GLshort d);
	void (*RasterPos4sv)(const GLshort * a);
	void (*ReadBuffer)(GLenum a);
	void (*ReadPixels)(GLint a, GLint b, GLsizei c, GLsizei d, GLenum e, GLenum f, GLvoid * g);
	void (*Rectd)(GLdouble a, GLdouble b, GLdouble c, GLdouble d);
	void (*Rectdv)(const GLdouble * a, const GLdouble * b);
	void (*Rectf)(GLfloat a, GLfloat b, GLfloat c, GLfloat d);
	void (*Rectfv)(const GLfloat * a, const GLfloat * b);
	void (*Recti)(GLint a, GLint b, GLint c, GLint d);
	void (*Rectiv)(const GLint * a, const GLint * b);
	void (*Rects)(GLshort a, GLshort b, GLshort c, GLshort d);
	void (*Rectsv)(const GLshort * a, const GLshort * b);
	GLint (*RenderMode)(GLenum a);
	void (*ResetHistogram)(GLenum a);
	void (*ResetMinmax)(GLenum a);
	void (*Rotated)(GLdouble a, GLdouble b, GLdouble c, GLdouble d);
	void (*Rotatef)(GLfloat a, GLfloat b, GLfloat c, GLfloat d);
	void (*Scaled)(GLdouble a, GLdouble b, GLdouble c);
	void (*Scalef)(GLfloat a, GLfloat b, GLfloat c);
	void (*Scissor)(GLint a, GLint b, GLsizei c, GLsizei d);
	void (*SelectBuffer)(GLsizei a, GLuint * b);
	void (*SeparableFilter2D)(GLenum a, GLenum b, GLsizei c, GLsizei d, GLenum e, GLenum f, const GLvoid * g, const GLvoid * h);
	void (*ShadeModel)(GLenum a);
	void (*StencilFunc)(GLenum a, GLint b, GLuint c);
	void (*StencilMask)(GLuint a);
	void (*StencilOp)(GLenum a, GLenum b, GLenum c);
	void (*TexCoord1d)(GLdouble a);
	void (*TexCoord1dv)(const GLdouble * a);
	void (*TexCoord1f)(GLfloat a);
	void (*TexCoord1fv)(const GLfloat * a);
	void (*TexCoord1i)(GLint a);
	void (*TexCoord1iv)(const GLint * a);
	void (*TexCoord1s)(GLshort a);
	void (*TexCoord1sv)(const GLshort * a);
	void (*TexCoord2d)(GLdouble a, GLdouble b);
	void (*TexCoord2dv)(const GLdouble * a);
	void (*TexCoord2f)(GLfloat a, GLfloat b);
	void (*TexCoord2fv)(const GLfloat * a);
	void (*TexCoord2i)(GLint a, GLint b);
	void (*TexCoord2iv)(const GLint * a);
	void (*TexCoord2s)(GLshort a, GLshort b);
	void (*TexCoord2sv)(const GLshort * a);
	void (*TexCoord3d)(GLdouble a, GLdouble b, GLdouble c);
	void (*TexCoord3dv)(const GLdouble * a);
	void (*TexCoord3f)(GLfloat a, GLfloat b, GLfloat c);
	void (*TexCoord3fv)(const GLfloat * a);
	void (*TexCoord3i)(GLint a, GLint b, GLint c);
	void (*TexCoord3iv)(const GLint * a);
	void (*TexCoord3s)(GLshort a, GLshort b, GLshort c);
	void (*TexCoord3sv)(const GLshort * a);
	void (*TexCoord4d)(GLdouble a, GLdouble b, GLdouble c, GLdouble d);
	void (*TexCoord4dv)(const GLdouble * a);
	void (*TexCoord4f)(GLfloat a, GLfloat b, GLfloat c, GLfloat d);
	void (*TexCoord4fv)(const GLfloat * a);
	void (*TexCoord4i)(GLint a, GLint b, GLint c, GLint d);
	void (*TexCoord4iv)(const GLint * a);
	void (*TexCoord4s)(GLshort a, GLshort b, GLshort c, GLshort d);
	void (*TexCoord4sv)(const GLshort * a);
	void (*TexCoordPointer)(GLint a, GLenum b, GLsizei c, const GLvoid * d);
	void (*TexEnvf)(GLenum a, GLenum b, GLfloat c);
	void (*TexEnvfv)(GLenum a, GLenum b, const GLfloat * c);
	void (*TexEnvi)(GLenum a, GLenum b, GLint c);
	void (*TexEnviv)(GLenum a, GLenum b, const GLint * c);
	void (*TexGend)(GLenum a, GLenum b, GLdouble c);
	void (*TexGendv)(GLenum a, GLenum b, const GLdouble * c);
	void (*TexGenf)(GLenum a, GLenum b, GLfloat c);
	void (*TexGenfv)(GLenum a, GLenum b, const GLfloat * c);
	void (*TexGeni)(GLenum a, GLenum b, GLint c);
	void (*TexGeniv)(GLenum a, GLenum b, const GLint * c);
	void (*TexImage1D)(GLenum a, GLint b, GLenum c, GLsizei d, GLint e, GLenum f, GLenum g, const GLvoid * h);
	void (*TexImage2D)(GLenum a, GLint b, GLenum c, GLsizei d, GLsizei e, GLint f, GLenum g, GLenum h, const GLvoid * i);
	void (*TexImage3D)(GLenum a, GLint b, GLenum c, GLsizei d, GLsizei e, GLsizei f, GLint g, GLenum h, GLenum i, const GLvoid * j);
	void (*TexParameterf)(GLenum a, GLenum b, GLfloat c);
	void (*TexParameterfv)(GLenum a, GLenum b, const GLfloat * c);
	void (*TexParameteri)(GLenum a, GLenum b, GLint c);
	void (*TexParameteriv)(GLenum a, GLenum b, const GLint * c);
	void (*TexSubImage1D)(GLenum a, GLint b, GLint c, GLsizei d, GLenum e, GLenum f, const GLvoid * g);
	void (*TexSubImage2D)(GLenum a, GLint b, GLint c, GLint d, GLsizei e, GLsizei f, GLenum g, GLenum h, const GLvoid * i);
	void (*TexSubImage3D)(GLenum a, GLint b, GLint c, GLint d, GLint e, GLsizei f, GLsizei g, GLsizei h, GLenum i, GLenum j, const GLvoid * k);
	void (*Translated)(GLdouble a, GLdouble b, GLdouble c);
	void (*Translatef)(GLfloat a, GLfloat b, GLfloat c);
	void (*Vertex2d)(GLdouble a, GLdouble b);
	void (*Vertex2dv)(const GLdouble * a);
	void (*Vertex2f)(GLfloat a, GLfloat b);
	void (*Vertex2fv)(const GLfloat * a);
	void (*Vertex2i)(GLint a, GLint b);
	void (*Vertex2iv)(const GLint * a);
	void (*Vertex2s)(GLshort a, GLshort b);
	void (*Vertex2sv)(const GLshort * a);
	void (*Vertex3d)(GLdouble a, GLdouble b, GLdouble c);
	void (*Vertex3dv)(const GLdouble * a);
	void (*Vertex3f)(GLfloat a, GLfloat b, GLfloat c);
	void (*Vertex3fv)(const GLfloat * a);
	void (*Vertex3i)(GLint a, GLint b, GLint c);
	void (*Vertex3iv)(const GLint * a);
	void (*Vertex3s)(GLshort a, GLshort b, GLshort c);
	void (*Vertex3sv)(const GLshort * a);
	void (*Vertex4d)(GLdouble a, GLdouble b, GLdouble c, GLdouble d);
	void (*Vertex4dv)(const GLdouble * a);
	void (*Vertex4f)(GLfloat a, GLfloat b, GLfloat c, GLfloat d);
	void (*Vertex4fv)(const GLfloat * a);
	void (*Vertex4i)(GLint a, GLint b, GLint c, GLint d);
	void (*Vertex4iv)(const GLint * a);
	void (*Vertex4s)(GLshort a, GLshort b, GLshort c, GLshort d);
	void (*Vertex4sv)(const GLshort * a);
	void (*VertexPointer)(GLint a, GLenum b, GLsizei c, const GLvoid * d);
	void (*Viewport)(GLint a, GLint b, GLsizei c, GLsizei d);
	void (*SampleCoverage)(GLclampf a, GLboolean b);
	void (*SamplePass)(GLenum a);
	void (*LoadTransposeMatrixf)(const GLfloat * a);
	void (*LoadTransposeMatrixd)(const GLdouble * a);
	void (*MultTransposeMatrixf)(const GLfloat * a);
	void (*MultTransposeMatrixd)(const GLdouble * a);
	void (*CompressedTexImage3D)(GLenum a, GLint b, GLenum c, GLsizei d, GLsizei e, GLsizei f, GLint g, GLsizei h, const GLvoid * i);
	void (*CompressedTexImage2D)(GLenum a, GLint b, GLenum c, GLsizei d, GLsizei e, GLint f, GLsizei g, const GLvoid * h);
	void (*CompressedTexImage1D)(GLenum a, GLint b, GLenum c, GLsizei d, GLint e, GLsizei f, const GLvoid * g);
	void (*CompressedTexSubImage3D)(GLenum a, GLint b, GLint c, GLint d, GLint e, GLsizei f, GLsizei g, GLsizei h, GLenum i, GLsizei j, const GLvoid * k);
	void (*CompressedTexSubImage2D)(GLenum a, GLint b, GLint c, GLint d, GLsizei e, GLsizei f, GLenum g, GLsizei h, const GLvoid * i);
	void (*CompressedTexSubImage1D)(GLenum a, GLint b, GLint c, GLsizei d, GLenum e, GLsizei f, const GLvoid * g);
	void (*GetCompressedTexImage)(GLenum a, GLint b, GLvoid * c);
	void (*ActiveTexture)(GLenum a);
	void (*ClientActiveTexture)(GLenum a);
	void (*MultiTexCoord1d)(GLenum a, GLdouble b);
	void (*MultiTexCoord1dv)(GLenum a, const GLdouble * b);
	void (*MultiTexCoord1f)(GLenum a, GLfloat b);
	void (*MultiTexCoord1fv)(GLenum a, const GLfloat * b);
	void (*MultiTexCoord1i)(GLenum a, GLint b);
	void (*MultiTexCoord1iv)(GLenum a, const GLint * b);
	void (*MultiTexCoord1s)(GLenum a, GLshort b);
	void (*MultiTexCoord1sv)(GLenum a, const GLshort * b);
	void (*MultiTexCoord2d)(GLenum a, GLdouble b, GLdouble c);
	void (*MultiTexCoord2dv)(GLenum a, const GLdouble * b);
	void (*MultiTexCoord2f)(GLenum a, GLfloat b, GLfloat c);
	void (*MultiTexCoord2fv)(GLenum a, const GLfloat * b);
	void (*MultiTexCoord2i)(GLenum a, GLint b, GLint c);
	void (*MultiTexCoord2iv)(GLenum a, const GLint * b);
	void (*MultiTexCoord2s)(GLenum a, GLshort b, GLshort c);
	void (*MultiTexCoord2sv)(GLenum a, const GLshort * b);
	void (*MultiTexCoord3d)(GLenum a, GLdouble b, GLdouble c, GLdouble d);
	void (*MultiTexCoord3dv)(GLenum a, const GLdouble * b);
	void (*MultiTexCoord3f)(GLenum a, GLfloat b, GLfloat c, GLfloat d);
	void (*MultiTexCoord3fv)(GLenum a, const GLfloat * b);
	void (*MultiTexCoord3i)(GLenum a, GLint b, GLint c, GLint d);
	void (*MultiTexCoord3iv)(GLenum a, const GLint * b);
	void (*MultiTexCoord3s)(GLenum a, GLshort b, GLshort c, GLshort d);
	void (*MultiTexCoord3sv)(GLenum a, const GLshort * b);
	void (*MultiTexCoord4d)(GLenum a, GLdouble b, GLdouble c, GLdouble d, GLdouble e);
	void (*MultiTexCoord4dv)(GLenum a, const GLdouble * b);
	void (*MultiTexCoord4f)(GLenum a, GLfloat b, GLfloat c, GLfloat d, GLfloat e);
	void (*MultiTexCoord4fv)(GLenum a, const GLfloat * b);
	void (*MultiTexCoord4i)(GLenum a, GLint b, GLint c, GLint d, GLint e);
	void (*MultiTexCoord4iv)(GLenum a, const GLint * b);
	void (*MultiTexCoord4s)(GLenum a, GLshort b, GLshort c, GLshort d, GLshort e);
	void (*MultiTexCoord4sv)(GLenum a, const GLshort * b);
	void (*FogCoordf)(GLfloat a);
	void (*FogCoordfv)(const GLfloat * a);
	void (*FogCoordd)(GLdouble a);
	void (*FogCoorddv)(const GLdouble * a);
	void (*FogCoordPointer)(GLenum a, GLsizei b, const GLvoid * c);
	void (*SecondaryColor3b)(GLbyte a, GLbyte b, GLbyte c);
	void (*SecondaryColor3bv)(const GLbyte * a);
	void (*SecondaryColor3d)(GLdouble a, GLdouble b, GLdouble c);
	void (*SecondaryColor3dv)(const GLdouble * a);
	void (*SecondaryColor3f)(GLfloat a, GLfloat b, GLfloat c);
	void (*SecondaryColor3fv)(const GLfloat * a);
	void (*SecondaryColor3i)(GLint a, GLint b, GLint c);
	void (*SecondaryColor3iv)(const GLint * a);
	void (*SecondaryColor3s)(GLshort a, GLshort b, GLshort c);
	void (*SecondaryColor3sv)(const GLshort * a);
	void (*SecondaryColor3ub)(GLubyte a, GLubyte b, GLubyte c);
	void (*SecondaryColor3ubv)(const GLubyte * a);
	void (*SecondaryColor3ui)(GLuint a, GLuint b, GLuint c);
	void (*SecondaryColor3uiv)(const GLuint * a);
	void (*SecondaryColor3us)(GLushort a, GLushort b, GLushort c);
	void (*SecondaryColor3usv)(const GLushort * a);
	void (*SecondaryColorPointer)(GLint a, GLenum b, GLsizei c, const GLvoid * d);
	void (*PointParameterf)(GLenum a, GLfloat b);
	void (*PointParameterfv)(GLenum a, const GLfloat * b);
	void (*PointParameteri)(GLenum a, GLint b);
	void (*PointParameteriv)(GLenum a, const GLint * b);
	void (*BlendFuncSeparate)(GLenum a, GLenum b, GLenum c, GLenum d);
	void (*MultiDrawArrays)(GLenum a, const GLint * b, const GLsizei * c, GLsizei d);
	void (*MultiDrawElements)(GLenum a, const GLsizei * b, GLenum c, const GLvoid * * d, GLsizei e);
	void (*WindowPos2d)(GLdouble a, GLdouble b);
	void (*WindowPos2dv)(const GLdouble * a);
	void (*WindowPos2f)(GLfloat a, GLfloat b);
	void (*WindowPos2fv)(const GLfloat * a);
	void (*WindowPos2i)(GLint a, GLint b);
	void (*WindowPos2iv)(const GLint * a);
	void (*WindowPos2s)(GLshort a, GLshort b);
	void (*WindowPos2sv)(const GLshort * a);
	void (*WindowPos3d)(GLdouble a, GLdouble b, GLdouble c);
	void (*WindowPos3dv)(const GLdouble * a);
	void (*WindowPos3f)(GLfloat a, GLfloat b, GLfloat c);
	void (*WindowPos3fv)(const GLfloat * a);
	void (*WindowPos3i)(GLint a, GLint b, GLint c);
	void (*WindowPos3iv)(const GLint * a);
	void (*WindowPos3s)(GLshort a, GLshort b, GLshort c);
	void (*WindowPos3sv)(const GLshort * a);
	void (*GenQueries)(GLsizei a, GLuint * b);
	void (*DeleteQueries)(GLsizei a, const GLuint * b);
	GLboolean (*IsQuery)(GLuint a);
	void (*BeginQuery)(GLenum a, GLuint b);
	void (*EndQuery)(GLenum a);
	void (*GetQueryiv)(GLenum a, GLenum b, GLint * c);
	void (*GetQueryObjectiv)(GLuint a, GLenum b, GLint * c);
	void (*GetQueryObjectuiv)(GLuint a, GLenum b, GLuint * c);
	void (*BindBuffer)(GLenum a, GLuint b);
	void (*DeleteBuffers)(GLsizei a, const GLuint * b);
	void (*GenBuffers)(GLsizei a, GLuint * b);
	GLboolean (*IsBuffer)(GLuint a);
	void (*BufferData)(GLenum a, GLsizeiptr b, const GLvoid * c, GLenum d);
	void (*BufferSubData)(GLenum a, GLintptr b, GLsizeiptr c, const GLvoid * d);
	void (*GetBufferSubData)(GLenum a, GLintptr b, GLsizeiptr c, GLvoid * d);
	GLvoid * (*MapBuffer)(GLenum a, GLenum b);
	GLboolean (*UnmapBuffer)(GLenum a);
	void (*GetBufferParameteriv)(GLenum a, GLenum b, GLint * c);
	void (*GetBufferPointerv)(GLenum a, GLenum b, GLvoid * * c);
	void (*DrawBuffers)(GLsizei a, const GLenum * b);
	void (*VertexAttrib1d)(GLuint a, GLdouble b);
	void (*VertexAttrib1dv)(GLuint a, const GLdouble * b);
	void (*VertexAttrib1f)(GLuint a, GLfloat b);
	void (*VertexAttrib1fv)(GLuint a, const GLfloat * b);
	void (*VertexAttrib1s)(GLuint a, GLshort b);
	void (*VertexAttrib1sv)(GLuint a, const GLshort * b);
	void (*VertexAttrib2d)(GLuint a, GLdouble b, GLdouble c);
	void (*VertexAttrib2dv)(GLuint a, const GLdouble * b);
	void (*VertexAttrib2f)(GLuint a, GLfloat b, GLfloat c);
	void (*VertexAttrib2fv)(GLuint a, const GLfloat * b);
	void (*VertexAttrib2s)(GLuint a, GLshort b, GLshort c);
	void (*VertexAttrib2sv)(GLuint a, const GLshort * b);
	void (*VertexAttrib3d)(GLuint a, GLdouble b, GLdouble c, GLdouble d);
	void (*VertexAttrib3dv)(GLuint a, const GLdouble * b);
	void (*VertexAttrib3f)(GLuint a, GLfloat b, GLfloat c, GLfloat d);
	void (*VertexAttrib3fv)(GLuint a, const GLfloat * b);
	void (*VertexAttrib3s)(GLuint a, GLshort b, GLshort c, GLshort d);
	void (*VertexAttrib3sv)(GLuint a, const GLshort * b);
	void (*VertexAttrib4Nbv)(GLuint a, const GLbyte * b);
	void (*VertexAttrib4Niv)(GLuint a, const GLint * b);
	void (*VertexAttrib4Nsv)(GLuint a, const GLshort * b);
	void (*VertexAttrib4Nub)(GLuint a, GLubyte b, GLubyte c, GLubyte d, GLubyte e);
	void (*VertexAttrib4Nubv)(GLuint a, const GLubyte * b);
	void (*VertexAttrib4Nuiv)(GLuint a, const GLuint * b);
	void (*VertexAttrib4Nusv)(GLuint a, const GLushort * b);
	void (*VertexAttrib4bv)(GLuint a, const GLbyte * b);
	void (*VertexAttrib4d)(GLuint a, GLdouble b, GLdouble c, GLdouble d, GLdouble e);
	void (*VertexAttrib4dv)(GLuint a, const GLdouble * b);
	void (*VertexAttrib4f)(GLuint a, GLfloat b, GLfloat c, GLfloat d, GLfloat e);
	void (*VertexAttrib4fv)(GLuint a, const GLfloat * b);
	void (*VertexAttrib4iv)(GLuint a, const GLint * b);
	void (*VertexAttrib4s)(GLuint a, GLshort b, GLshort c, GLshort d, GLshort e);
	void (*VertexAttrib4sv)(GLuint a, const GLshort * b);
	void (*VertexAttrib4ubv)(GLuint a, const GLubyte * b);
	void (*VertexAttrib4uiv)(GLuint a, const GLuint * b);
	void (*VertexAttrib4usv)(GLuint a, const GLushort * b);
	void (*VertexAttribPointer)(GLuint a, GLint b, GLenum c, GLboolean d, GLsizei e, const GLvoid * f);
	void (*EnableVertexAttribArray)(GLuint a);
	void (*DisableVertexAttribArray)(GLuint a);
	void (*GetVertexAttribdv)(GLuint a, GLenum b, GLdouble * c);
	void (*GetVertexAttribfv)(GLuint a, GLenum b, GLfloat * c);
	void (*GetVertexAttribiv)(GLuint a, GLenum b, GLint * c);
	void (*GetVertexAttribPointerv)(GLuint a, GLenum b, GLvoid * * c);
	void (*DeleteShader)(GLuint a);
	void (*DetachShader)(GLuint a, GLuint b);
	GLuint (*CreateShader)(GLenum a);
	void (*ShaderSource)(GLuint a, GLsizei b, const GLchar * * c, const GLint * d);
	void (*CompileShader)(GLuint a);
	GLuint (*CreateProgram)();
	void (*AttachShader)(GLuint a, GLuint b);
	void (*LinkProgram)(GLuint a);
	void (*UseProgram)(GLuint a);
	void (*DeleteProgram)(GLuint a);
	void (*ValidateProgram)(GLuint a);
	void (*Uniform1f)(GLint a, GLfloat b);
	void (*Uniform2f)(GLint a, GLfloat b, GLfloat c);
	void (*Uniform3f)(GLint a, GLfloat b, GLfloat c, GLfloat d);
	void (*Uniform4f)(GLint a, GLfloat b, GLfloat c, GLfloat d, GLfloat e);
	void (*Uniform1i)(GLint a, GLint b);
	void (*Uniform2i)(GLint a, GLint b, GLint c);
	void (*Uniform3i)(GLint a, GLint b, GLint c, GLint d);
	void (*Uniform4i)(GLint a, GLint b, GLint c, GLint d, GLint e);
	void (*Uniform1fv)(GLint a, GLsizei b, const GLfloat * c);
	void (*Uniform2fv)(GLint a, GLsizei b, const GLfloat * c);
	void (*Uniform3fv)(GLint a, GLsizei b, const GLfloat * c);
	void (*Uniform4fv)(GLint a, GLsizei b, const GLfloat * c);
	void (*Uniform1iv)(GLint a, GLsizei b, const GLint * c);
	void (*Uniform2iv)(GLint a, GLsizei b, const GLint * c);
	void (*Uniform3iv)(GLint a, GLsizei b, const GLint * c);
	void (*Uniform4iv)(GLint a, GLsizei b, const GLint * c);
	void (*UniformMatrix2fv)(GLint a, GLsizei b, GLboolean c, const GLfloat * d);
	void (*UniformMatrix3fv)(GLint a, GLsizei b, GLboolean c, const GLfloat * d);
	void (*UniformMatrix4fv)(GLint a, GLsizei b, GLboolean c, const GLfloat * d);
	GLboolean (*IsShader)(GLuint a);
	GLboolean (*IsProgram)(GLuint a);
	void (*GetShaderiv)(GLuint a, GLenum b, GLint * c);
	void (*GetProgramiv)(GLuint a, GLenum b, GLint * c);
	void (*GetAttachedShaders)(GLuint a, GLsizei b, GLsizei * c, GLuint * d);
	void (*GetShaderInfoLog)(GLuint a, GLsizei b, GLsizei * c, GLchar * d);
	void (*GetProgramInfoLog)(GLuint a, GLsizei b, GLsizei * c, GLchar * d);
	GLint (*GetUniformLocation)(GLuint a, const GLchar * b);
	void (*GetActiveUniform)(GLuint a, GLuint b, GLsizei c, GLsizei * d, GLint * e, GLenum * f, GLchar * g);
	void (*GetUniformfv)(GLuint a, GLint b, GLfloat * c);
	void (*GetUniformiv)(GLuint a, GLint b, GLint * c);
	void (*GetShaderSource)(GLuint a, GLsizei b, GLsizei * c, GLchar * d);
	void (*BindAttribLocation)(GLuint a, GLuint b, const GLchar * c);
	void (*GetActiveAttrib)(GLuint a, GLuint b, GLsizei c, GLsizei * d, GLint * e, GLenum * f, GLchar * g);
	GLint (*GetAttribLocation)(GLuint a, const GLchar * b);
	void (*StencilFuncSeparate)(GLenum a, GLenum b, GLint c, GLuint d);
	void (*StencilOpSeparate)(GLenum a, GLenum b, GLenum c, GLenum d);
	void (*StencilMaskSeparate)(GLenum a, GLuint b);
	void (*UniformMatrix2x3fv)(GLint a, GLsizei b, GLboolean c, const GLfloat * d);
	void (*UniformMatrix3x2fv)(GLint a, GLsizei b, GLboolean c, const GLfloat * d);
	void (*UniformMatrix2x4fv)(GLint a, GLsizei b, GLboolean c, const GLfloat * d);
	void (*UniformMatrix4x2fv)(GLint a, GLsizei b, GLboolean c, const GLfloat * d);
	void (*UniformMatrix3x4fv)(GLint a, GLsizei b, GLboolean c, const GLfloat * d);
	void (*UniformMatrix4x3fv)(GLint a, GLsizei b, GLboolean c, const GLfloat * d);
};
extern struct apple_api __gl_api;
extern void apple_api_init_direct(void);
#ifdef __cplusplus
}
#endif
#endif /*APPLE_API_H*/
