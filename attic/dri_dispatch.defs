;; -*- lisp -*-

;; dri_dispatch.defs

;; $Id: dri_dispatch.defs,v 1.11 2006/09/06 21:22:28 jharper Exp $
;; $XFree86: xc/lib/GL/apple/dri_dispatch.defs,v 1.5 2004/01/16 22:39:56 torrey Exp $

;; Copyright (c) 2002 Apple Computer, Inc. All rights reserved.
;; Copyright (c) 2003 Torrey T. Lyons. All rights reserved.

;; Permission is hereby granted, free of charge, to any person
;; obtaining a copy of this software and associated documentation files
;; (the "Software"), to deal in the Software without restriction,
;; including without limitation the rights to use, copy, modify, merge,
;; publish, distribute, sublicense, and/or sell copies of the Software,
;; and to permit persons to whom the Software is furnished to do so,
;; subject to the following conditions:

;; The above copyright notice and this permission notice shall be
;; included in all copies or substantial portions of the Software.

;; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
;; EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
;; MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
;; NONINFRINGEMENT.  IN NO EVENT SHALL THE THE ABOVE LISTED COPYRIGHT
;; HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
;; WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
;; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
;; DEALINGS IN THE SOFTWARE.

;; Except as contained in this notice, the name(s) of the above
;; copyright holders shall not be used in advertising or otherwise to
;; promote the sale, use or other dealings in this Software without
;; prior written authorization.

;; This file maps the Mesa GL api that X uses to the Apple CGL entry
;; points. It's used to automatically generate the CGL dispatch table
;; that's installed when an indirect context is current

;; The format is (RETURN-TYPE MESA-NAME CGL-INDEX "ARGS" [ALIAS])

;; For the script to work, ARGS must be either the string "void" or a
;; comma separated list of parameters. Each parameter name _must_ be
;; the last non-whitespace token in the field (i.e. inline function
;; declarations won't work)

;; CGL-INDEX is an index into the function vector table defined in
;; <OpenGL/gliDispatch.h>. The names of the entries in this table
;; aren't guaranteed to remain the same, but the table is guaranteed to
;; be binary-compatible in future revisions, so we use indices.

;; If CGL-INDEX is -1, it denotes that OpenGL.framework doesn't
;; implement that function. We'll generate our own stub and make
;; it work in indirect mode (unless it has an alias).

;; ALIAS is the name of the function that should be used to define an
;; external entry point for the function (because it doesn't exist in
;; OpenGL.framework)

;; The ordering matches the Mesa api table, but that's not important

(void NewList 177 "GLuint list, GLenum mode")
(void EndList 75 "void")
(void CallList 8 "GLuint list")
(void CallLists 9 "GLsizei n, GLenum type, const GLvoid * lists")
(void DeleteLists 58 "GLuint list, GLsizei range")
(GLuint GenLists 97 "GLsizei range")
(void ListBase 156 "GLuint base")
(void Begin 4 "GLenum mode")
(void Bitmap 6 "GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte * bitmap")
(void Color3b 17 "GLbyte red, GLbyte green, GLbyte blue")
(void Color3bv 18 "const GLbyte * v")
(void Color3d 19 "GLdouble red, GLdouble green, GLdouble blue")
(void Color3dv 20 "const GLdouble * v")
(void Color3f 21 "GLfloat red, GLfloat green, GLfloat blue")
(void Color3fv 22 "const GLfloat * v")
(void Color3i 23 "GLint red, GLint green, GLint blue")
(void Color3iv 24 "const GLint * v")
(void Color3s 25 "GLshort red, GLshort green, GLshort blue")
(void Color3sv 26 "const GLshort * v")
(void Color3ub 27 "GLubyte red, GLubyte green, GLubyte blue")
(void Color3ubv 28 "const GLubyte * v")
(void Color3ui 29 "GLuint red, GLuint green, GLuint blue")
(void Color3uiv 30 "const GLuint * v")
(void Color3us 31 "GLushort red, GLushort green, GLushort blue")
(void Color3usv 32 "const GLushort * v")
(void Color4b 33 "GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha")
(void Color4bv 34 "const GLbyte * v")
(void Color4d 35 "GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha")
(void Color4dv 36 "const GLdouble * v")
(void Color4f 37 "GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha")
(void Color4fv 38 "const GLfloat * v")
(void Color4i 39 "GLint red, GLint green, GLint blue, GLint alpha")
(void Color4iv 40 "const GLint * v")
(void Color4s 41 "GLshort red, GLshort green, GLshort blue, GLshort alpha")
(void Color4sv 42 "const GLshort * v")
(void Color4ub 43 "GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha")
(void Color4ubv 44 "const GLubyte * v")
(void Color4ui 45 "GLuint red, GLuint green, GLuint blue, GLuint alpha")
(void Color4uiv 46 "const GLuint * v")
(void Color4us 47 "GLushort red, GLushort green, GLushort blue, GLushort alpha")
(void Color4usv 48 "const GLushort * v")
(void EdgeFlag 69 "GLboolean flag")
(void EdgeFlagv 71 "const GLboolean * flag")
(void End 74 "void")
(void Indexd 131 "GLdouble c")
(void Indexdv 132 "const GLdouble * c")
(void Indexf 133 "GLfloat c")
(void Indexfv 134 "const GLfloat * c")
(void Indexi 135 "GLint c")
(void Indexiv 136 "const GLint * c")
(void Indexs 137 "GLshort c")
(void Indexsv 138 "const GLshort * c")
(void Normal3b 178 "GLbyte nx, GLbyte ny, GLbyte nz")
(void Normal3bv 179 "const GLbyte * v")
(void Normal3d 180 "GLdouble nx, GLdouble ny, GLdouble nz")
(void Normal3dv 181 "const GLdouble * v")
(void Normal3f 182 "GLfloat nx, GLfloat ny, GLfloat nz")
(void Normal3fv 183 "const GLfloat * v")
(void Normal3i 184 "GLint nx, GLint ny, GLint nz")
(void Normal3iv 185 "const GLint * v")
(void Normal3s 186 "GLshort nx, GLshort ny, GLshort nz")
(void Normal3sv 187 "const GLshort * v")
(void RasterPos2d 212 "GLdouble x, GLdouble y")
(void RasterPos2dv 213 "const GLdouble * v")
(void RasterPos2f 214 "GLfloat x, GLfloat y")
(void RasterPos2fv 215 "const GLfloat * v")
(void RasterPos2i 216 "GLint x, GLint y")
(void RasterPos2iv 217 "const GLint * v")
(void RasterPos2s 218 "GLshort x, GLshort y")
(void RasterPos2sv 219 "const GLshort * v")
(void RasterPos3d 220 "GLdouble x, GLdouble y, GLdouble z")
(void RasterPos3dv 221 "const GLdouble * v")
(void RasterPos3f 222 "GLfloat x, GLfloat y, GLfloat z")
(void RasterPos3fv 223 "const GLfloat * v")
(void RasterPos3i 224 "GLint x, GLint y, GLint z")
(void RasterPos3iv 225 "const GLint * v")
(void RasterPos3s 226 "GLshort x, GLshort y, GLshort z")
(void RasterPos3sv 227 "const GLshort * v")
(void RasterPos4d 228 "GLdouble x, GLdouble y, GLdouble z, GLdouble w")
(void RasterPos4dv 229 "const GLdouble * v")
(void RasterPos4f 230 "GLfloat x, GLfloat y, GLfloat z, GLfloat w")
(void RasterPos4fv 231 "const GLfloat * v")
(void RasterPos4i 232 "GLint x, GLint y, GLint z, GLint w")
(void RasterPos4iv 233 "const GLint * v")
(void RasterPos4s 234 "GLshort x, GLshort y, GLshort z, GLshort w")
(void RasterPos4sv 235 "const GLshort * v")
(void Rectd 238 "GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2")
(void Rectdv 239 "const GLdouble * v1, const GLdouble * v2")
(void Rectf 240 "GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2")
(void Rectfv 241 "const GLfloat * v1, const GLfloat * v2")
(void Recti 242 "GLint x1, GLint y1, GLint x2, GLint y2")
(void Rectiv 243 "const GLint * v1, const GLint * v2")
(void Rects 244 "GLshort x1, GLshort y1, GLshort x2, GLshort y2")
(void Rectsv 245 "const GLshort * v1, const GLshort * v2")
(void TexCoord1d 257 "GLdouble s")
(void TexCoord1dv 258 "const GLdouble * v")
(void TexCoord1f 259 "GLfloat s")
(void TexCoord1fv 260 "const GLfloat * v")
(void TexCoord1i 261 "GLint s")
(void TexCoord1iv 262 "const GLint * v")
(void TexCoord1s 263 "GLshort s")
(void TexCoord1sv 264 "const GLshort * v")
(void TexCoord2d 265 "GLdouble s, GLdouble t")
(void TexCoord2dv 266 "const GLdouble * v")
(void TexCoord2f 267 "GLfloat s, GLfloat t")
(void TexCoord2fv 268 "const GLfloat * v")
(void TexCoord2i 269 "GLint s, GLint t")
(void TexCoord2iv 270 "const GLint * v")
(void TexCoord2s 271 "GLshort s, GLshort t")
(void TexCoord2sv 272 "const GLshort * v")
(void TexCoord3d 273 "GLdouble s, GLdouble t, GLdouble r")
(void TexCoord3dv 274 "const GLdouble * v")
(void TexCoord3f 275 "GLfloat s, GLfloat t, GLfloat r")
(void TexCoord3fv 276 "const GLfloat * v")
(void TexCoord3i 277 "GLint s, GLint t, GLint r")
(void TexCoord3iv 278 "const GLint * v")
(void TexCoord3s 279 "GLshort s, GLshort t, GLshort r")
(void TexCoord3sv 280 "const GLshort * v")
(void TexCoord4d 281 "GLdouble s, GLdouble t, GLdouble r, GLdouble q")
(void TexCoord4dv 282 "const GLdouble * v")
(void TexCoord4f 283 "GLfloat s, GLfloat t, GLfloat r, GLfloat q")
(void TexCoord4fv 284 "const GLfloat * v")
(void TexCoord4i 285 "GLint s, GLint t, GLint r, GLint q")
(void TexCoord4iv 286 "const GLint * v")
(void TexCoord4s 287 "GLshort s, GLshort t, GLshort r, GLshort q")
(void TexCoord4sv 288 "const GLshort * v")
(void Vertex2d 310 "GLdouble x, GLdouble y")
(void Vertex2dv 311 "const GLdouble * v")
(void Vertex2f 312 "GLfloat x, GLfloat y")
(void Vertex2fv 313 "const GLfloat * v")
(void Vertex2i 314 "GLint x, GLint y")
(void Vertex2iv 315 "const GLint * v")
(void Vertex2s 316 "GLshort x, GLshort y")
(void Vertex2sv 317 "const GLshort * v")
(void Vertex3d 318 "GLdouble x, GLdouble y, GLdouble z")
(void Vertex3dv 319 "const GLdouble * v")
(void Vertex3f 320 "GLfloat x, GLfloat y, GLfloat z")
(void Vertex3fv 321 "const GLfloat * v")
(void Vertex3i 322 "GLint x, GLint y, GLint z")
(void Vertex3iv 323 "const GLint * v")
(void Vertex3s 324 "GLshort x, GLshort y, GLshort z")
(void Vertex3sv 325 "const GLshort * v")
(void Vertex4d 326 "GLdouble x, GLdouble y, GLdouble z, GLdouble w")
(void Vertex4dv 327 "const GLdouble * v")
(void Vertex4f 328 "GLfloat x, GLfloat y, GLfloat z, GLfloat w")
(void Vertex4fv 329 "const GLfloat * v")
(void Vertex4i 330 "GLint x, GLint y, GLint z, GLint w")
(void Vertex4iv 331 "const GLint * v")
(void Vertex4s 332 "GLshort x, GLshort y, GLshort z, GLshort w")
(void Vertex4sv 333 "const GLshort * v")
(void ClipPlane 16 "GLenum plane, const GLdouble * equation")
(void ColorMaterial 50 "GLenum face, GLenum mode")
(void CullFace 57 "GLenum mode")
(void Fogf 91 "GLenum pname, GLfloat param")
(void Fogfv 92 "GLenum pname, const GLfloat * params")
(void Fogi 93 "GLenum pname, GLint param")
(void Fogiv 94 "GLenum pname, const GLint * params")
(void FrontFace 95 "GLenum mode")
(void Hint 128 "GLenum target, GLenum mode")
(void Lightf 150 "GLenum light, GLenum pname, GLfloat param")
(void Lightfv 151 "GLenum light, GLenum pname, const GLfloat * params")
(void Lighti 152 "GLenum light, GLenum pname, GLint param")
(void Lightiv 153 "GLenum light, GLenum pname, const GLint * params")
(void LightModelf 146 "GLenum pname, GLfloat param")
(void LightModelfv 147 "GLenum pname, const GLfloat * params")
(void LightModeli 148 "GLenum pname, GLint param")
(void LightModeliv 149 "GLenum pname, const GLint * params")
(void LineStipple 154 "GLint factor, GLushort pattern")
(void LineWidth 155 "GLfloat width")
(void Materialf 170 "GLenum face, GLenum pname, GLfloat param")
(void Materialfv 171 "GLenum face, GLenum pname, const GLfloat * params")
(void Materiali 172 "GLenum face, GLenum pname, GLint param")
(void Materialiv 173 "GLenum face, GLenum pname, const GLint * params")
(void PointSize 199 "GLfloat size")
(void PolygonMode 200 "GLenum face, GLenum mode")
(void PolygonStipple 202 "const GLubyte * mask")
(void Scissor 251 "GLint x, GLint y, GLsizei width, GLsizei height")
(void ShadeModel 253 "GLenum mode")
(void TexParameterf 302 "GLenum target, GLenum pname, GLfloat param")
(void TexParameterfv 303 "GLenum target, GLenum pname, const GLfloat * params")
(void TexParameteri 304 "GLenum target, GLenum pname, GLint param")
(void TexParameteriv 305 "GLenum target, GLenum pname, const GLint * params")
(void TexImage1D 300 "GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid * pixels")
(void TexImage2D 301 "GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid * pixels")
(void TexEnvf 290 "GLenum target, GLenum pname, GLfloat param")
(void TexEnvfv 291 "GLenum target, GLenum pname, const GLfloat * params")
(void TexEnvi 292 "GLenum target, GLenum pname, GLint param")
(void TexEnviv 293 "GLenum target, GLenum pname, const GLint * params")
(void TexGend 294 "GLenum coord, GLenum pname, GLdouble param")
(void TexGendv 295 "GLenum coord, GLenum pname, const GLdouble * params")
(void TexGenf 296 "GLenum coord, GLenum pname, GLfloat param")
(void TexGenfv 297 "GLenum coord, GLenum pname, const GLfloat * params")
(void TexGeni 298 "GLenum coord, GLenum pname, GLint param")
(void TexGeniv 299 "GLenum coord, GLenum pname, const GLint * params")
(void FeedbackBuffer 88 "GLsizei size, GLenum type, GLfloat * buffer")
(void SelectBuffer 252 "GLsizei size, GLuint * buffer")
(GLint RenderMode 246 "GLenum mode")
(void InitNames 141 "void")
(void LoadName 160 "GLuint name")
(void PassThrough 190 "GLfloat token")
(void PopName 206 "void")
(void PushName 211 "GLuint name")
(void DrawBuffer 66 "GLenum mode")
(void Clear 10 "GLbitfield mask")
(void ClearAccum 11 "GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha")
(void ClearIndex 14 "GLfloat c")
(void ClearColor 12 "GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha")
(void ClearStencil 15 "GLint s")
(void ClearDepth 13 "GLclampd depth")
(void StencilMask 255 "GLuint mask")
(void ColorMask 49 "GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha")
(void DepthMask 61 "GLboolean flag")
(void IndexMask 129 "GLuint mask")
(void Accum 0 "GLenum op, GLfloat value")
(void Disable 63 "GLenum cap")
(void Enable 72 "GLenum cap")
(void Finish 89 "void")
(void Flush 90 "void")
(void PopAttrib 203 "void")
(void PushAttrib 208 "GLbitfield mask")
(void Map1d 162 "GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points")
(void Map1f 163 "GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points")
(void Map2d 164 "GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points")
(void Map2f 165 "GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points")
(void MapGrid1d 166 "GLint un, GLdouble u1, GLdouble u2")
(void MapGrid1f 167 "GLint un, GLfloat u1, GLfloat u2")
(void MapGrid2d 168 "GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2")
(void MapGrid2f 169 "GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2")
(void EvalCoord1d 76 "GLdouble u")
(void EvalCoord1dv 77 "const GLdouble * u")
(void EvalCoord1f 78 "GLfloat u")
(void EvalCoord1fv 79 "const GLfloat * u")
(void EvalCoord2d 80 "GLdouble u, GLdouble v")
(void EvalCoord2dv 81 "const GLdouble * u")
(void EvalCoord2f 82 "GLfloat u, GLfloat v")
(void EvalCoord2fv 83 "const GLfloat * u")
(void EvalMesh1 84 "GLenum mode, GLint i1, GLint i2")
(void EvalPoint1 86 "GLint i")
(void EvalMesh2 85 "GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2")
(void EvalPoint2 87 "GLint i, GLint j")
(void AlphaFunc 1 "GLenum func, GLclampf ref")
(void BlendFunc 7 "GLenum sfactor, GLenum dfactor")
(void LogicOp 161 "GLenum opcode")
(void StencilFunc 254 "GLenum func, GLint ref, GLuint mask")
(void StencilOp 256 "GLenum fail, GLenum zfail, GLenum zpass")
(void DepthFunc 60 "GLenum func")
(void PixelZoom 198 "GLfloat xfactor, GLfloat yfactor")
(void PixelTransferf 196 "GLenum pname, GLfloat param")
(void PixelTransferi 197 "GLenum pname, GLint param")
(void PixelStoref 194 "GLenum pname, GLfloat param")
(void PixelStorei 195 "GLenum pname, GLint param")
(void PixelMapfv 191 "GLenum map, GLint mapsize, const GLfloat * values")
(void PixelMapuiv 192 "GLenum map, GLint mapsize, const GLuint * values")
(void PixelMapusv 193 "GLenum map, GLint mapsize, const GLushort * values")
(void ReadBuffer 236 "GLenum mode")
(void CopyPixels 52 "GLint x, GLint y, GLsizei width, GLsizei height, GLenum type")
(void ReadPixels 237 "GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid * pixels")
(void DrawPixels 68 "GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * pixels")
(void GetBooleanv 99 "GLenum pname, GLboolean * params")
(void GetClipPlane 100 "GLenum plane, GLdouble * equation")
(void GetDoublev 101 "GLenum pname, GLdouble * params")
(GLenum GetError 102 "void")
(void GetFloatv 103 "GLenum pname, GLfloat * params")
(void GetIntegerv 104 "GLenum pname, GLint * params")
(void GetLightfv 105 "GLenum light, GLenum pname, GLfloat * params")
(void GetLightiv 106 "GLenum light, GLenum pname, GLint * params")
(void GetMapdv 107 "GLenum target, GLenum query, GLdouble * v")
(void GetMapfv 108 "GLenum target, GLenum query, GLfloat * v")
(void GetMapiv 109 "GLenum target, GLenum query, GLint * v")
(void GetMaterialfv 110 "GLenum face, GLenum pname, GLfloat * params")
(void GetMaterialiv 111 "GLenum face, GLenum pname, GLint * params")
(void GetPixelMapfv 112 "GLenum map, GLfloat * values")
(void GetPixelMapuiv 113 "GLenum map, GLuint * values")
(void GetPixelMapusv 114 "GLenum map, GLushort * values")
(void GetPolygonStipple 116 "GLubyte * mask")
(|const GLubyte *| GetString 117 "GLenum name")
(void GetTexEnvfv 118 "GLenum target, GLenum pname, GLfloat * params")
(void GetTexEnviv 119 "GLenum target, GLenum pname, GLint * params")
(void GetTexGendv 120 "GLenum coord, GLenum pname, GLdouble * params")
(void GetTexGenfv 121 "GLenum coord, GLenum pname, GLfloat * params")
(void GetTexGeniv 122 "GLenum coord, GLenum pname, GLint * params")
(void GetTexImage 123 "GLenum target, GLint level, GLenum format, GLenum type, GLvoid * pixels")
(void GetTexParameterfv 126 "GLenum target, GLenum pname, GLfloat * params")
(void GetTexParameteriv 127 "GLenum target, GLenum pname, GLint * params")
(void GetTexLevelParameterfv 124 "GLenum target, GLint level, GLenum pname, GLfloat * params")
(void GetTexLevelParameteriv 125 "GLenum target, GLint level, GLenum pname, GLint * params")
(GLboolean IsEnabled 143 "GLenum cap")
(GLboolean IsList 144 "GLuint list")
(void DepthRange 62 "GLclampd zNear, GLclampd zFar")
(void Frustum 96 "GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar")
(void LoadIdentity 157 "void")
(void LoadMatrixf 159 "const GLfloat * m")
(void LoadMatrixd 158 "const GLdouble * m")
(void MatrixMode 174 "GLenum mode")
(void MultMatrixf 176 "const GLfloat * m")
(void MultMatrixd 175 "const GLdouble * m")
(void Ortho 189 "GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar")
(void PopMatrix 205 "void")
(void PushMatrix 210 "void")
(void Rotated 247 "GLdouble angle, GLdouble x, GLdouble y, GLdouble z")
(void Rotatef 248 "GLfloat angle, GLfloat x, GLfloat y, GLfloat z")
(void Scaled 249 "GLdouble x, GLdouble y, GLdouble z")
(void Scalef 250 "GLfloat x, GLfloat y, GLfloat z")
(void Translated 308 "GLdouble x, GLdouble y, GLdouble z")
(void Translatef 309 "GLfloat x, GLfloat y, GLfloat z")
(void Viewport 335 "GLint x, GLint y, GLsizei width, GLsizei height")
(void ArrayElement 3 "GLint i")
(void BindTexture 5 "GLenum target, GLenum texture")
(void ColorPointer 51 "GLint size, GLenum type, GLsizei stride, const GLvoid * pointer")
(void DisableClientState 64 "GLenum array")
(void DrawArrays 65 "GLenum mode, GLint first, GLsizei count")
(void DrawElements 67 "GLenum mode, GLsizei count, GLenum type, const GLvoid * indices")
(void EdgeFlagPointer 70 "GLsizei stride, const GLvoid * pointer")
(void EnableClientState 73 "GLenum array")
(void IndexPointer 130 "GLenum type, GLsizei stride, const GLvoid * pointer")
(void Indexub 139 "GLubyte c")
(void Indexubv 140 "const GLubyte * c")
(void InterleavedArrays 142 "GLenum format, GLsizei stride, const GLvoid * pointer")
(void NormalPointer 188 "GLenum type, GLsizei stride, const GLvoid * pointer")
(void PolygonOffset 201 "GLfloat factor, GLfloat units")
(void TexCoordPointer 289 "GLint size, GLenum type, GLsizei stride, const GLvoid * pointer")
(void VertexPointer 334 "GLint size, GLenum type, GLsizei stride, const GLvoid * pointer")
(GLboolean AreTexturesResident 2 "GLsizei n, const GLenum * textures, GLboolean * residences")
(void CopyTexImage1D 53 "GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border")
(void CopyTexImage2D 54 "GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border")
(void CopyTexSubImage1D 55 "GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width")
(void CopyTexSubImage2D 56 "GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height")
(void DeleteTextures 59 "GLsizei n, const GLenum * textures")
(void GenTextures 98 "GLsizei n, GLenum * textures")
(void GetPointerv 115 "GLenum pname, GLvoid * * params")
(GLboolean IsTexture 145 "GLenum texture")
(void PrioritizeTextures 207 "GLsizei n, const GLenum * textures, const GLclampf * priorities")
(void TexSubImage1D 306 "GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid * pixels")
(void TexSubImage2D 307 "GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * pixels")
(void PopClientAttrib 204 "void")
(void PushClientAttrib 209 "GLbitfield mask")
(void BlendColor 337 "GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha")
(void BlendEquation 338 "GLenum mode")
(void DrawRangeElements 405 "GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid * indices")
(void ColorTable 406 "GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid * table")
(void ColorTableParameterfv 407 "GLenum target, GLenum pname, const GLfloat * params")
(void ColorTableParameteriv 408 "GLenum target, GLenum pname, const GLint * params")
(void CopyColorTable 409 "GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width")
(void GetColorTable 410 "GLenum target, GLenum format, GLenum type, GLvoid * table")
(void GetColorTableParameterfv 411 "GLenum target, GLenum pname, GLfloat * params")
(void GetColorTableParameteriv 412 "GLenum target, GLenum pname, GLint * params")
(void ColorSubTable 413 "GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid * data")
(void CopyColorSubTable 414 "GLenum target, GLsizei start, GLint x, GLint y, GLsizei width")
(void ConvolutionFilter1D 415 "GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid * image")
(void ConvolutionFilter2D 416 "GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * image")
(void ConvolutionParameterf 417 "GLenum target, GLenum pname, GLfloat params")
(void ConvolutionParameterfv 418 "GLenum target, GLenum pname, const GLfloat * params")
(void ConvolutionParameteri 419 "GLenum target, GLenum pname, GLint params")
(void ConvolutionParameteriv 420 "GLenum target, GLenum pname, const GLint * params")
(void CopyConvolutionFilter1D 421 "GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width")
(void CopyConvolutionFilter2D 422 "GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height")
(void GetConvolutionFilter 423 "GLenum target, GLenum format, GLenum type, GLvoid * image")
(void GetConvolutionParameterfv 424 "GLenum target, GLenum pname, GLfloat * params")
(void GetConvolutionParameteriv 425 "GLenum target, GLenum pname, GLint * params")
(void GetSeparableFilter 426 "GLenum target, GLenum format, GLenum type, GLvoid * row, GLvoid * column, GLvoid * span")
(void SeparableFilter2D 427 "GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * row, const GLvoid * column")
(void GetHistogram 428 "GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid * values")
(void GetHistogramParameterfv 429 "GLenum target, GLenum pname, GLfloat * params")
(void GetHistogramParameteriv 430 "GLenum target, GLenum pname, GLint * params")
(void GetMinmax 431 "GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid * values")
(void GetMinmaxParameterfv 432 "GLenum target, GLenum pname, GLfloat * params")
(void GetMinmaxParameteriv 433 "GLenum target, GLenum pname, GLint * params")
(void Histogram 434 "GLenum target, GLsizei width, GLenum internalformat, GLboolean sink")
(void Minmax 435 "GLenum target, GLenum internalformat, GLboolean sink")
(void ResetHistogram 436 "GLenum target")
(void ResetMinmax 437 "GLenum target")
(void TexImage3D 438 "GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid * pixels")
(void TexSubImage3D 439 "GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid * pixels")
(void CopyTexSubImage3D 440 "GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height")
(void ActiveTextureARB 342 "GLenum texture")
(void ClientActiveTextureARB 341 "GLenum texture")
(void MultiTexCoord1dARB 343 "GLenum target, GLdouble s")
(void MultiTexCoord1dvARB 344 "GLenum target, const GLdouble * v")
(void MultiTexCoord1fARB 345 "GLenum target, GLfloat s")
(void MultiTexCoord1fvARB 346 "GLenum target, const GLfloat * v")
(void MultiTexCoord1iARB 347 "GLenum target, GLint s")
(void MultiTexCoord1ivARB 348 "GLenum target, const GLint * v")
(void MultiTexCoord1sARB 349 "GLenum target, GLshort s")
(void MultiTexCoord1svARB 350 "GLenum target, const GLshort * v")
(void MultiTexCoord2dARB 351 "GLenum target, GLdouble s, GLdouble t")
(void MultiTexCoord2dvARB 352 "GLenum target, const GLdouble * v")
(void MultiTexCoord2fARB 353 "GLenum target, GLfloat s, GLfloat t")
(void MultiTexCoord2fvARB 354 "GLenum target, const GLfloat * v")
(void MultiTexCoord2iARB 355 "GLenum target, GLint s, GLint t")
(void MultiTexCoord2ivARB 356 "GLenum target, const GLint * v")
(void MultiTexCoord2sARB 357 "GLenum target, GLshort s, GLshort t")
(void MultiTexCoord2svARB 358 "GLenum target, const GLshort * v")
(void MultiTexCoord3dARB 359 "GLenum target, GLdouble s, GLdouble t, GLdouble r")
(void MultiTexCoord3dvARB 360 "GLenum target, const GLdouble * v")
(void MultiTexCoord3fARB 361 "GLenum target, GLfloat s, GLfloat t, GLfloat r")
(void MultiTexCoord3fvARB 362 "GLenum target, const GLfloat * v")
(void MultiTexCoord3iARB 363 "GLenum target, GLint s, GLint t, GLint r")
(void MultiTexCoord3ivARB 364 "GLenum target, const GLint * v")
(void MultiTexCoord3sARB 365 "GLenum target, GLshort s, GLshort t, GLshort r")
(void MultiTexCoord3svARB 366 "GLenum target, const GLshort * v")
(void MultiTexCoord4dARB 367 "GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q")
(void MultiTexCoord4dvARB 368 "GLenum target, const GLdouble * v")
(void MultiTexCoord4fARB 369 "GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q")
(void MultiTexCoord4fvARB 370 "GLenum target, const GLfloat * v")
(void MultiTexCoord4iARB 371 "GLenum target, GLint s, GLint t, GLint r, GLint q")
(void MultiTexCoord4ivARB 372 "GLenum target, const GLint * v")
(void MultiTexCoord4sARB 373 "GLenum target, GLshort s, GLshort t, GLshort r, GLshort q")
(void MultiTexCoord4svARB 374 "GLenum target, const GLshort * v")
(void LoadTransposeMatrixfARB 376 "const GLfloat * m")
(void LoadTransposeMatrixdARB 375 "const GLdouble * m")
(void MultTransposeMatrixfARB 378 "const GLfloat * m")
(void MultTransposeMatrixdARB 377 "const GLdouble * m")
(void SampleCoverageARB 459 "GLclampf value, GLboolean invert")
(void PolygonOffsetEXT -1 "GLfloat factor, GLfloat bias" PolygonOffset)
(void GetTexFilterFuncSGIS -1 "GLenum target, GLenum filter, GLfloat * weights")
(void TexFilterFuncSGIS -1 "GLenum target, GLenum filter, GLsizei n, const GLfloat * weights")
(void GetHistogramEXT -1 "GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid * values" GetHistogram)
(void GetHistogramParameterfvEXT -1 "GLenum target, GLenum pname, GLfloat * params" GetHistogramParameterfv)
(void GetHistogramParameterivEXT -1 "GLenum target, GLenum pname, GLint * params" GetHistogramParameteriv)
(void GetMinmaxEXT -1 "GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid * values" GetMinmax)
(void GetMinmaxParameterfvEXT -1 "GLenum target, GLenum pname, GLfloat * params" GetMinmaxParameterfv)
(void GetMinmaxParameterivEXT -1 "GLenum target, GLenum pname, GLint * params" GetMinmaxParameteriv)
(void GetConvolutionFilterEXT -1 "GLenum target, GLenum format, GLenum type, GLvoid * image" GetConvolutionFilter)
(void GetConvolutionParameterfvEXT -1 "GLenum target, GLenum pname, GLfloat * params" GetConvolutionParameterfv)
(void GetConvolutionParameterivEXT -1 "GLenum target, GLenum pname, GLint * params" GetConvolutionParameteriv)
(void GetSeparableFilterEXT -1 "GLenum target, GLenum format, GLenum type, GLvoid * row, GLvoid * column, GLvoid * span" GetSeparableFilter)
(void GetColorTableSGI -1 "GLenum target, GLenum format, GLenum type, GLvoid * table" GetColorTable)
(void GetColorTableParameterfvSGI -1 "GLenum target, GLenum pname, GLfloat * params" GetColorTableParameterfv)
(void GetColorTableParameterivSGI -1 "GLenum target, GLenum pname, GLint * params" GetColorTableParameteriv)
(void PixelTexGenSGIX -1 "GLenum mode")
(void PixelTexGenParameteriSGIS -1 "GLenum pname, GLint param")
(void PixelTexGenParameterivSGIS -1 "GLenum pname, const GLint * params")
(void PixelTexGenParameterfSGIS -1 "GLenum pname, GLfloat param")
(void PixelTexGenParameterfvSGIS -1 "GLenum pname, const GLfloat * params")
(void GetPixelTexGenParameterivSGIS -1 "GLenum pname, GLint * params")
(void GetPixelTexGenParameterfvSGIS -1 "GLenum pname, GLfloat * params")
(void TexImage4DSGIS -1 "GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const GLvoid * pixels")
(void TexSubImage4DSGIS -1 "GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const GLvoid * pixels")
(GLboolean AreTexturesResidentEXT -1 "GLsizei n, const GLenum * textures, GLboolean * residences" AreTexturesResident)
(void GenTexturesEXT -1 "GLsizei n, GLenum * textures" GenTextures)
(GLboolean IsTextureEXT -1 "GLenum texture")
(void DetailTexFuncSGIS -1 "GLenum target, GLsizei n, const GLfloat * points")
(void GetDetailTexFuncSGIS -1 "GLenum target, GLfloat * points")
(void SharpenTexFuncSGIS -1 "GLenum target, GLsizei n, const GLfloat * points")
(void GetSharpenTexFuncSGIS -1 "GLenum target, GLfloat * points")
(void SampleMaskSGIS -1 "GLclampf value, GLboolean invert")
(void SamplePatternSGIS -1 "GLenum pattern")
(void ColorPointerEXT -1 "GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid * pointer")
(void EdgeFlagPointerEXT -1 "GLsizei stride, GLsizei count, const GLboolean * pointer")
(void IndexPointerEXT -1 "GLenum type, GLsizei stride, GLsizei count, const GLvoid * pointer")
(void NormalPointerEXT -1 "GLenum type, GLsizei stride, GLsizei count, const GLvoid * pointer")
(void TexCoordPointerEXT -1 "GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid * pointer")
(void VertexPointerEXT -1 "GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid * pointer")
(void SpriteParameterfSGIX -1 "GLenum pname, GLfloat param")
(void SpriteParameterfvSGIX -1 "GLenum pname, const GLfloat * params")
(void SpriteParameteriSGIX -1 "GLenum pname, GLint param")
(void SpriteParameterivSGIX -1 "GLenum pname, const GLint * params")
(void PointParameterfEXT 540 "GLenum pname, GLfloat param" PointParameterf)
(void PointParameterfvEXT 541 "GLenum pname, const GLfloat * params" PointParameterfv)
(GLint GetInstrumentsSGIX -1 "void")
(void InstrumentsBufferSGIX -1 "GLsizei size, GLint * buffer")
(GLint PollInstrumentsSGIX -1 "GLint * marker_p")
(void ReadInstrumentsSGIX -1 "GLint marker")
(void StartInstrumentsSGIX -1 "void")
(void StopInstrumentsSGIX -1 "GLint marker")
(void FrameZoomSGIX -1 "GLint factor")
(void TagSampleBufferSGIX -1 "void")
(void ReferencePlaneSGIX -1 "const GLdouble * equation")
(void FlushRasterSGIX -1 "void")
(void GetListParameterfvSGIX -1 "GLuint list, GLenum pname, GLfloat * params")
(void GetListParameterivSGIX -1 "GLuint list, GLenum pname, GLint * params")
(void ListParameterfSGIX -1 "GLuint list, GLenum pname, GLfloat param")
(void ListParameterfvSGIX -1 "GLuint list, GLenum pname, const GLfloat * params")
(void ListParameteriSGIX -1 "GLuint list, GLenum pname, GLint param")
(void ListParameterivSGIX -1 "GLuint list, GLenum pname, const GLint * params")
(void FragmentColorMaterialSGIX -1 "GLenum face, GLenum mode")
(void FragmentLightfSGIX -1 "GLenum light, GLenum pname, GLfloat param")
(void FragmentLightfvSGIX -1 "GLenum light, GLenum pname, const GLfloat * params")
(void FragmentLightiSGIX -1 "GLenum light, GLenum pname, GLint param")
(void FragmentLightivSGIX -1 "GLenum light, GLenum pname, const GLint * params")
(void FragmentLightModelfSGIX -1 "GLenum pname, GLfloat param")
(void FragmentLightModelfvSGIX -1 "GLenum pname, const GLfloat * params")
(void FragmentLightModeliSGIX -1 "GLenum pname, GLint param")
(void FragmentLightModelivSGIX -1 "GLenum pname, const GLint * params")
(void FragmentMaterialfSGIX -1 "GLenum face, GLenum pname, GLfloat param")
(void FragmentMaterialfvSGIX -1 "GLenum face, GLenum pname, const GLfloat * params")
(void FragmentMaterialiSGIX -1 "GLenum face, GLenum pname, GLint param")
(void FragmentMaterialivSGIX -1 "GLenum face, GLenum pname, const GLint * params")
(void GetFragmentLightfvSGIX -1 "GLenum light, GLenum pname, GLfloat * params")
(void GetFragmentLightivSGIX -1 "GLenum light, GLenum pname, GLint * params")
(void GetFragmentMaterialfvSGIX -1 "GLenum face, GLenum pname, GLfloat * params")
(void GetFragmentMaterialivSGIX -1 "GLenum face, GLenum pname, GLint * params")
(void LightEnviSGIX -1 "GLenum pname, GLint param")
(void VertexWeightfEXT -1 "GLfloat weight")
(void VertexWeightfvEXT -1 "const GLfloat * weight")
(void VertexWeightPointerEXT -1 "GLsizei size, GLenum type, GLsizei stride, const GLvoid * pointer")
(void FlushVertexArrayRangeNV -1 "void")
(void VertexArrayRangeNV 403 "GLsizei length, const GLvoid * pointer" VertexArrayRangeAPPLE)
(void CombinerParameterfvNV 441 "GLenum pname, const GLfloat * params")
(void CombinerParameterfNV 442 "GLenum pname, GLfloat param")
(void CombinerParameterivNV 443 "GLenum pname, const GLint * params")
(void CombinerParameteriNV 444 "GLenum pname, GLint param")
(void CombinerInputNV 445 "GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage")
(void CombinerOutputNV 446 "GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum")
(void FinalCombinerInputNV 447 "GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage")
(void GetCombinerInputParameterfvNV 448 "GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat * params")
(void GetCombinerInputParameterivNV 449 "GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint * params")
(void GetCombinerOutputParameterfvNV 450 "GLenum stage, GLenum portion, GLenum pname, GLfloat * params")
(void GetCombinerOutputParameterivNV 451 "GLenum stage, GLenum portion, GLenum pname, GLint * params")
(void GetFinalCombinerInputParameterfvNV 452 "GLenum variable, GLenum pname, GLfloat * params")
(void GetFinalCombinerInputParameterivNV 453 "GLenum variable, GLenum pname, GLint * params")
(void ResizeBuffersMESA -1 "void")
(void WindowPos2dMESA -1 "GLdouble x, GLdouble y")
(void WindowPos2dvMESA -1 "const GLdouble * v")
(void WindowPos2fMESA -1 "GLfloat x, GLfloat y")
(void WindowPos2fvMESA -1 "const GLfloat * v")
(void WindowPos2iMESA -1 "GLint x, GLint y")
(void WindowPos2ivMESA -1 "const GLint * v")
(void WindowPos2sMESA -1 "GLshort x, GLshort y")
(void WindowPos2svMESA -1 "const GLshort * v")
(void WindowPos3dMESA -1 "GLdouble x, GLdouble y, GLdouble z")
(void WindowPos3dvMESA -1 "const GLdouble * v")
(void WindowPos3fMESA -1 "GLfloat x, GLfloat y, GLfloat z")
(void WindowPos3fvMESA -1 "const GLfloat * v")
(void WindowPos3iMESA -1 "GLint x, GLint y, GLint z")
(void WindowPos3ivMESA -1 "const GLint * v")
(void WindowPos3sMESA -1 "GLshort x, GLshort y, GLshort z")
(void WindowPos3svMESA -1 "const GLshort * v")
(void WindowPos4dMESA -1 "GLdouble x, GLdouble y, GLdouble z, GLdouble w")
(void WindowPos4dvMESA -1 "const GLdouble * v")
(void WindowPos4fMESA -1 "GLfloat x, GLfloat y, GLfloat z, GLfloat w")
(void WindowPos4fvMESA -1 "const GLfloat * v")
(void WindowPos4iMESA -1 "GLint x, GLint y, GLint z, GLint w")
(void WindowPos4ivMESA -1 "const GLint * v")
(void WindowPos4sMESA -1 "GLshort x, GLshort y, GLshort z, GLshort w")
(void WindowPos4svMESA -1 "const GLshort * v")
(void BlendFuncSeparateEXT 336 "GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha")
(void IndexMaterialEXT -1 "GLenum face, GLenum mode")
(void IndexFuncEXT -1 "GLenum func, GLclampf ref")
(void LockArraysEXT 339 "GLint first, GLsizei count")
(void UnlockArraysEXT 340 "void")
(void CullParameterdvEXT -1 "GLenum pname, GLdouble * params")
(void CullParameterfvEXT -1 "GLenum pname, GLfloat * params")
(void HintPGI -1 "GLenum target, GLint mode")
(void FogCoordfEXT 544 "GLfloat coord")
(void FogCoordfvEXT 545 "const GLfloat * coord")
(void FogCoorddEXT 546 "GLdouble coord")
(void FogCoorddvEXT 547 "const GLdouble * coord")
(void FogCoordPointerEXT 548 "GLenum type, GLsizei stride, const GLvoid * pointer")
;; OpenGL.framework defines these, but doesn't have dispatch slots for them
;; (void GetColorTableEXT -1 "GLenum target, GLenum format, GLenum type, GLvoid * data" GetColorTable)
;; (void GetColorTableParameterivEXT -1 "GLenum target, GLenum pname, GLint * params" GetColorTableParameteriv)
;; (void GetColorTableParameterfvEXT -1 "GLenum target, GLenum pname, GLfloat * params" GetColorTableParameterfv)
(void TbufferMask3DFX -1 "GLuint mask")
(void CompressedTexImage3DARB 379 "GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid * data")
(void CompressedTexImage2DARB 380 "GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid * data")
(void CompressedTexImage1DARB 381 "GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid * data")
(void CompressedTexSubImage3DARB 382 "GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid * data")
(void CompressedTexSubImage2DARB 383 "GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid * data")
(void CompressedTexSubImage1DARB 384 "GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid * data")
(void GetCompressedTexImageARB 385 "GLenum target, GLint level, void * img")
(void SecondaryColor3bEXT 386 "GLbyte red, GLbyte green, GLbyte blue")
(void SecondaryColor3bvEXT 387 "const GLbyte * v")
(void SecondaryColor3dEXT 388 "GLdouble red, GLdouble green, GLdouble blue")
(void SecondaryColor3dvEXT 389 "const GLdouble * v")
(void SecondaryColor3fEXT 390 "GLfloat red, GLfloat green, GLfloat blue")
(void SecondaryColor3fvEXT 391 "const GLfloat * v")
(void SecondaryColor3iEXT 392 "GLint red, GLint green, GLint blue")
(void SecondaryColor3ivEXT 393 "const GLint * v")
(void SecondaryColor3sEXT 394 "GLshort red, GLshort green, GLshort blue")
(void SecondaryColor3svEXT 395 "const GLshort * v")
(void SecondaryColor3ubEXT 396 "GLubyte red, GLubyte green, GLubyte blue")
(void SecondaryColor3ubvEXT 397 "const GLubyte * v")
(void SecondaryColor3uiEXT 398 "GLuint red, GLuint green, GLuint blue")
(void SecondaryColor3uivEXT 399 "const GLuint * v")
(void SecondaryColor3usEXT 400 "GLushort red, GLushort green, GLushort blue")
(void SecondaryColor3usvEXT 401 "const GLushort * v")
(void SecondaryColorPointerEXT 402 "GLint size, GLenum type, GLsizei stride, const GLvoid * pointer")
(GLboolean AreProgramsResidentNV -1 "GLsizei n, const GLuint * ids, GLboolean * residences")
(void BindProgramNV -1 "GLenum target, GLuint id")
(void DeleteProgramsNV -1 "GLsizei n, const GLuint * ids")
(void ExecuteProgramNV -1 "GLenum target, GLuint id, const GLfloat * params")
(void GenProgramsNV -1 "GLsizei n, GLuint * ids")
(void GetProgramParameterdvNV -1 "GLenum target, GLuint index, GLenum pname, GLdouble * params")
(void GetProgramParameterfvNV -1 "GLenum target, GLuint index, GLenum pname, GLfloat * params")
(void GetProgramivNV -1 "GLuint id, GLenum pname, GLint * params")
(void GetProgramStringNV -1 "GLuint id, GLenum pname, GLubyte * program")
(void GetTrackMatrixivNV -1 "GLenum target, GLuint address, GLenum pname, GLint * params")
(void GetVertexAttribdvNV -1 "GLuint index, GLenum pname, GLdouble * params")
(void GetVertexAttribfvNV -1 "GLuint index, GLenum pname, GLfloat * params")
(void GetVertexAttribivNV -1 "GLuint index, GLenum pname, GLint * params")
(void GetVertexAttribPointervNV -1 "GLuint index, GLenum pname, GLvoid ** pointer")
(GLboolean IsProgramNV -1 "GLuint id")
(void LoadProgramNV -1 "GLenum target, GLuint id, GLsizei len, const GLubyte * program")
(void ProgramParameter4dNV -1 "GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w")
(void ProgramParameter4dvNV -1 "GLenum target, GLuint index, const GLdouble * params")
(void ProgramParameter4fNV -1 "GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w")
(void ProgramParameter4fvNV -1 "GLenum target, GLuint index, const GLfloat * params")
(void ProgramParameters4dvNV -1 "GLenum target, GLuint index, GLuint num, const GLdouble * params")
(void ProgramParameters4fvNV -1 "GLenum target, GLuint index, GLuint num, const GLfloat * params")
(void RequestResidentProgramsNV -1 "GLsizei n, const GLuint * ids")
(void TrackMatrixNV -1 "GLenum target, GLuint address, GLenum matrix, GLenum transform")
(void VertexAttribPointerNV -1 "GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid * pointer")
(void VertexAttrib1dNV -1 "GLuint index, GLdouble x")
(void VertexAttrib1dvNV -1 "GLuint index, const GLdouble * v")
(void VertexAttrib1fNV -1 "GLuint index, GLfloat x")
(void VertexAttrib1fvNV -1 "GLuint index, const GLfloat * v")
(void VertexAttrib1sNV -1 "GLuint index, GLshort x")
(void VertexAttrib1svNV -1 "GLuint index, const GLshort * v")
(void VertexAttrib2dNV -1 "GLuint index, GLdouble x, GLdouble y")
(void VertexAttrib2dvNV -1 "GLuint index, const GLdouble * v")
(void VertexAttrib2fNV -1 "GLuint index, GLfloat x, GLfloat y")
(void VertexAttrib2fvNV -1 "GLuint index, const GLfloat * v")
(void VertexAttrib2sNV -1 "GLuint index, GLshort x, GLshort y")
(void VertexAttrib2svNV -1 "GLuint index, const GLshort * v")
(void VertexAttrib3dNV -1 "GLuint index, GLdouble x, GLdouble y, GLdouble z")
(void VertexAttrib3dvNV -1 "GLuint index, const GLdouble * v")
(void VertexAttrib3fNV -1 "GLuint index, GLfloat x, GLfloat y, GLfloat z")
(void VertexAttrib3fvNV -1 "GLuint index, const GLfloat * v")
(void VertexAttrib3sNV -1 "GLuint index, GLshort x, GLshort y, GLshort z")
(void VertexAttrib3svNV -1 "GLuint index, const GLshort * v")
(void VertexAttrib4dNV -1 "GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w")
(void VertexAttrib4dvNV -1 "GLuint index, const GLdouble * v")
(void VertexAttrib4fNV -1 "GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w")
(void VertexAttrib4fvNV -1 "GLuint index, const GLfloat * v")
(void VertexAttrib4sNV -1 "GLuint index, GLshort x, GLshort y, GLshort z, GLshort w")
(void VertexAttrib4svNV -1 "GLuint index, const GLshort * v")
(void VertexAttrib4ubNV -1 "GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w")
(void VertexAttrib4ubvNV -1 "GLuint index, const GLubyte * v")
(void VertexAttribs1dvNV -1 "GLuint index, GLsizei n, const GLdouble * v")
(void VertexAttribs1fvNV -1 "GLuint index, GLsizei n, const GLfloat * v")
(void VertexAttribs1svNV -1 "GLuint index, GLsizei n, const GLshort * v")
(void VertexAttribs2dvNV -1 "GLuint index, GLsizei n, const GLdouble * v")
(void VertexAttribs2fvNV -1 "GLuint index, GLsizei n, const GLfloat * v")
(void VertexAttribs2svNV -1 "GLuint index, GLsizei n, const GLshort * v")
(void VertexAttribs3dvNV -1 "GLuint index, GLsizei n, const GLdouble * v")
(void VertexAttribs3fvNV -1 "GLuint index, GLsizei n, const GLfloat * v")
(void VertexAttribs3svNV -1 "GLuint index, GLsizei n, const GLshort * v")
(void VertexAttribs4dvNV -1 "GLuint index, GLsizei n, const GLdouble * v")
(void VertexAttribs4fvNV -1 "GLuint index, GLsizei n, const GLfloat * v")
(void VertexAttribs4svNV -1 "GLuint index, GLsizei n, const GLshort * v")
(void VertexAttribs4ubvNV -1 "GLuint index, GLsizei n, const GLubyte * v")
(void PointParameteriNV 542 "GLenum pname, GLint params")
(void PointParameterivNV 543 "GLenum pname, const GLint * params")
(void MultiDrawArraysEXT 567 "GLenum mode, GLint * first, GLsizei * count, GLsizei primcount")
(void MultiDrawElementsEXT 568 "GLenum mode, const GLsizei * count, GLenum type, const GLvoid ** indices, GLsizei primcount")
(void ActiveStencilFaceEXT 585 "GLenum face")
(void DeleteFencesNV -1 "GLsizei n, const GLuint * fences")
(void GenFencesNV -1 "GLsizei n, GLuint * fences")
(GLboolean IsFenceNV -1 "GLuint fence")
(GLboolean TestFenceNV -1 "GLuint fence")
(void GetFenceivNV -1 "GLuint fence, GLenum pname, GLint * params")
(void FinishFenceNV -1 "GLuint fence")
(void SetFenceNV -1 "GLuint fence, GLenum condition")

;; Entry points that exist in standard XFree86 libGL, but aren't in the
;; Mesa dispatch table, and aren't in OpenGL.framework

(void ArrayElementEXT -1 "GLint i" ArrayElement)
(void BindTextureEXT -1 "GLenum target, GLuint texture" BindTexture)
(void BlendFuncSeparateINGR -1 "GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha" BlendFuncSeparateEXT)
(void ColorTableParameterfvSGI -1 "GLenum target, GLenum pname, const GLfloat * params" ColorTableParameterfv)
(void ColorTableParameterivSGI -1 "GLenum target, GLenum pname, const GLint * params" ColorTableParameteriv)
(void ColorTableSGI -1 "GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid * table" ColorTable)
(void ConvolutionFilter1DEXT -1 "GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid * image" ConvolutionFilter1D)
(void ConvolutionFilter2DEXT -1 "GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * image" ConvolutionFilter2D)
(void ConvolutionParameterfEXT -1 "GLenum target, GLenum pname, GLfloat params" ConvolutionParameterf)
(void ConvolutionParameterfvEXT -1 "GLenum target, GLenum pname, const GLfloat * params" ConvolutionParameterfv)
(void ConvolutionParameteriEXT -1 "GLenum target, GLenum pname, GLint params" ConvolutionParameteri)
(void ConvolutionParameterivEXT -1 "GLenum target, GLenum pname, const GLint * params" ConvolutionParameteriv)
(void CopyColorSubTableEXT -1 "GLenum target, GLsizei start, GLint x, GLint y, GLsizei width" CopyColorSubTable)
(void CopyColorTableSGI -1 "GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width" CopyColorTable)
(void CopyConvolutionFilter1DEXT -1 "GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width" CopyConvolutionFilter1D)
(void CopyConvolutionFilter2DEXT -1 "GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height" CopyConvolutionFilter2D)
(void CopyTexImage1DEXT -1 "GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border" CopyTexImage1D)
(void CopyTexImage2DEXT -1 "GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border" CopyTexImage2D)
(void CopyTexSubImage1DEXT -1 "GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width" CopyTexSubImage1D)
(void CopyTexSubImage2DEXT -1 "GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height" CopyTexSubImage2D)
(void CopyTexSubImage3DEXT -1 "GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height" CopyTexSubImage3D)
(void DeleteTexturesEXT -1 "GLsizei n, const GLuint *textures" DeleteTextures)
(void DrawArraysEXT -1 "GLenum mode, GLint first, GLsizei count" DrawArrays)
(void GetPointervEXT -1 "GLenum pname, GLvoid * * params" GetPointerv)
(void HistogramEXT -1 "GLenum target, GLsizei width, GLenum internalformat, GLboolean sink" Histogram)
(void MinmaxEXT -1 "GLenum target, GLenum internalformat, GLboolean sink" Minmax)
(void PointParameterfSGIS -1 "GLenum pname, GLfloat param" PointParameterf)
(void PointParameterfvSGIS -1 "GLenum pname, const GLfloat * params" PointParameterfv)
;(void PointParameteri -1 "GLenum pname, GLint params" PointParameteriNV)
;(void PointParameteriv -1 "GLenum pname, const GLint * params" PointParameterivNV)
(void PrioritizeTexturesEXT -1 "GLsizei n, const GLenum * textures, const GLclampf * priorities" PrioritizeTextures)
(void ResetHistogramEXT -1 "GLenum target" ResetHistogram)
(void ResetMinmaxEXT -1 "GLenum target" ResetMinmax)
(void SampleMaskEXT -1 "GLclampf value, GLboolean invert" SampleMaskSGIS)
(void SamplePatternEXT -1 "GLenum pattern" SamplePatternSGIS)
(void SeparableFilter2DEXT -1 "GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * row, const GLvoid * column" SeparableFilter2D)
(void TexImage3DEXT -1 "GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid * pixels" TexImage3D)
(void TexSubImage1DEXT -1 "GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid * pixels" TexSubImage1D)
(void TexSubImage2DEXT -1 "GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * pixels" TexSubImage2D)
(void TexSubImage3DEXT -1 "GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid * pixels" TexSubImage3D)
